#!/usr/bin/env bash

set -euo pipefail

current_script_path=${BASH_SOURCE[0]}
plugin_dir=$(dirname "$(dirname "$current_script_path")")

# shellcheck source=../lib/utils.bash
source "${plugin_dir}/lib/utils.bash"

mkdir -p "$ASDF_DOWNLOAD_PATH"

release_file="$ASDF_DOWNLOAD_PATH/$TOOL_NAME-$ASDF_INSTALL_VERSION.tar.gz"

# Download tar.gz file to the download directory
get_arch() {
  local arch
  arch=$(uname -m | tr '[:upper:]' '[:lower:]')
  case ${arch} in
  arm64)
    # If this is Apple silicon, then use the x86_64 architecture
    if [[ "$(uname | tr '[:upper:]' '[:lower:]')" == 'darwin' ]]; then
      arch='x86_64'
    else
      arch='x86_64' # arm
    fi
    ;;
  armv7l)
    arch='x86_64' # arm
    ;;
  esac

  echo "${arch}"
}

get_platform() {
  plat=$(uname | tr '[:upper:]' '[:lower:]')
  case ${plat} in
  darwin)
    plat='macos'
    ;;
  linux)
    if [[ "$(get_arch)" == 'arm' ]]; then
      plat='linux'
    else
      plat='linux'
    fi
    ;;
  windows)
    plat='windows'
    ;;
  esac

  echo "${plat}"
}

arch="$(get_arch)"
platform="$(get_platform)"
download_release "$ASDF_INSTALL_VERSION" "$release_file" "$arch" "$platform"

#  Extract contents of tar.gz file into the download directory
tar -xzf "$release_file" -C "$ASDF_DOWNLOAD_PATH" --strip-components=1 || fail "Could not extract $release_file"

# Remove the tar.gz file since we don't need to keep it
rm "$release_file"
